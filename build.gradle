plugins {
    id 'groovy'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'antlr'
    id 'idea'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.apache.groovy:groovy'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.spockframework:spock-spring:2.4-M1-groovy-4.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'

    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")

    antlr "org.antlr:antlr4:4.13.0"
}
tasks.named('test') {
    useJUnitPlatform()
}

generateGrammarSource {
    arguments += ['-visitor', '-long-messages']
    outputDirectory = file("$buildDir/generated-src/antlr/main")
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated-src/antlr/main"
        }
    }
}

idea {
    module {
        generatedSourceDirs += file("$buildDir/generated-src/antlr/main")
    }
}


tasks.named('compileJava') {
    dependsOn tasks.generateGrammarSource
}
